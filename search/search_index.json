{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DAI \u2014 Debug &amp; Develop AI","text":"<p>DAI (Debug &amp; Develop AI) is a CLI tool for AI-assisted debugging and development directly from your terminal. It is designed for developers who want to integrate AI into their workflow without leaving the command line.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>AI-powered code analysis \u2014 get suggestions and explanations directly in the terminal.</li> <li>GitHub integration \u2014 optionally create GitHub issues directly from the CLI.</li> <li>Multi-language support \u2014 works with various tech stacks.</li> <li>Local configuration \u2014 stored in <code>~/.dai/config.yaml</code>.</li> </ul>"},{"location":"#documentation-structure","title":"Documentation structure","text":"<ul> <li>Installation</li> <li>Configuration</li> <li>GitHub Token</li> <li>Commands</li> <li>Troubleshooting</li> <li>Contributing</li> <li>License</li> </ul> <p>\u00a9 Licensed under GNU GPL v3</p>"},{"location":"commands/","title":"Commands","text":"<p>This page lists all available DAI CLI commands and their usage.</p>"},{"location":"commands/#dai-auth","title":"<code>dai auth</code>","text":"<p>Authenticate DAI with external services (currently GitHub token only).</p> <pre><code>dai auth\n</code></pre> <p>Prompts for a GitHub Personal Access Token (PAT) and saves it in the local configuration.</p>"},{"location":"commands/#dai-completion","title":"<code>dai completion</code>","text":"<p>Generate the autocompletion script for your shell.</p> <pre><code>dai completion bash\ndai completion zsh\ndai completion fish\n</code></pre>"},{"location":"commands/#dai-config","title":"<code>dai config</code>","text":"<p>Configure global DAI settings stored in <code>~/.dai/config.yaml</code>.</p> <pre><code>dai config\n</code></pre>"},{"location":"commands/#dai-ignore","title":"<code>dai ignore</code>","text":"<p>Create a default <code>.daiignore</code> file in the project root (uses <code>.gitignore</code> syntax).</p> <pre><code>dai ignore\n</code></pre>"},{"location":"commands/#dai-init","title":"<code>dai init</code>","text":"<p>Initialize DAI for the current project by creating <code>.dai/project.yaml</code>.</p> <pre><code>dai init\n</code></pre>"},{"location":"commands/#dai-triage","title":"<code>dai triage</code>","text":"<p>Analyze a commit and open a single GitHub issue with findings.</p> <pre><code>dai triage --commit &lt;commit_hash&gt;\n</code></pre> <p>Options: - <code>--commit</code> \u2014 Commit hash to analyze (defaults to the latest commit)</p>"},{"location":"commands/#dai-triage-local","title":"<code>dai triage-local</code>","text":"<p>Analyze a single local file and append findings to <code>.dai/local.log</code>.</p> <pre><code>dai triage-local path/to/file.go\n</code></pre>"},{"location":"commands/#global-flags","title":"Global Flags","text":"Flag Description <code>-h, --help</code> Show help for a command <code>-p, --parrot string</code> Summon the DAI parrot (<code>party</code>, <code>insult</code>, <code>wise</code> modes) <code>-v, --version</code> Show the DAI version <p>Next: Troubleshooting</p>"},{"location":"configuration/","title":"Configuration","text":"<p>This guide explains how to configure DAI for the first time and how to update your settings later.</p>"},{"location":"configuration/#local-configuration","title":"Local configuration","text":"<p>DAI stores its configuration locally in:</p> <pre><code>~/.dai/config.yaml\n</code></pre> <p>This file is automatically created when you run:</p> <pre><code>dai config\n</code></pre>"},{"location":"configuration/#configuration-fields","title":"Configuration fields","text":"Field Description Example <code>openai_key</code> Your OpenAI API key (required for AI features) <code>sk-1234567890abcdef</code> <code>model</code> Preferred AI model <code>gpt-4o-mini</code> <code>provider</code> (Optional) API provider name <code>openai</code> <code>github_token</code> (Optional) GitHub Personal Access Token for GitHub integration <code>ghp_1234567890abcdef</code>"},{"location":"configuration/#editing-the-config-manually","title":"Editing the config manually","text":"<p>You can edit the config file directly using your preferred text editor:</p> <pre><code>nano ~/.dai/config.yaml\n</code></pre> <p>Make sure to keep correct YAML formatting.</p>"},{"location":"configuration/#resetting-configuration","title":"Resetting configuration","text":"<p>If you want to start fresh:</p> <pre><code>rm ~/.dai/config.yaml\ndai config\n</code></pre> <p>This will recreate the config file and start the setup wizard again.</p> <p>Next: GitHub Token</p>"},{"location":"contributing/","title":"Contributing","text":"<p>We welcome contributions to DAI! Whether it's fixing a bug, improving documentation, or adding a new feature, your help is appreciated.</p>"},{"location":"contributing/#how-to-contribute","title":"How to contribute","text":"<ol> <li> <p>Fork the repository    Click the \"Fork\" button at the top-right of the DAI repository.</p> </li> <li> <p>Clone your fork </p> </li> </ol> <pre><code>git clone https://github.com/&lt;your-username&gt;/dai.git\ncd dai\n</code></pre> <ol> <li>Create a new branch </li> </ol> <pre><code>git checkout -b feature/my-new-feature\n</code></pre> <ol> <li>Make changes </li> <li>Follow Go best practices.</li> <li>Format your code with <code>gofmt</code>.</li> <li> <p>Keep functions small and modular.</p> </li> <li> <p>Test your changes </p> </li> </ol> <pre><code>go test ./...\n</code></pre> <ol> <li>Commit changes </li> </ol> <pre><code>git add .\ngit commit -m \"Add my new feature\"\n</code></pre> <ol> <li>Push to your fork </li> </ol> <pre><code>git push origin feature/my-new-feature\n</code></pre> <ol> <li>Open a Pull Request    Go to your fork on GitHub and click \"Compare &amp; pull request\".</li> </ol>"},{"location":"contributing/#code-style-guidelines","title":"Code style guidelines","text":"<ul> <li>Use <code>gofmt</code> before committing.</li> <li>Follow idiomatic Go naming conventions.</li> <li>Keep CLI command descriptions clear and concise.</li> <li>Avoid introducing unnecessary dependencies.</li> </ul>"},{"location":"contributing/#reporting-issues","title":"Reporting issues","text":"<p>If you find a bug, please open a GitHub issue with: - Steps to reproduce - Expected behavior - Actual behavior - Any relevant logs or screenshots</p> <p>Next: License</p>"},{"location":"github-token/","title":"GitHub Token","text":"<p>This guide explains how to set up a GitHub Personal Access Token (PAT) for DAI so it can interact with your repositories.</p>"},{"location":"github-token/#why-do-you-need-a-github-token","title":"Why do you need a GitHub token?","text":"<p>DAI uses the GitHub API to perform certain actions, such as:</p> <ul> <li>Creating issues directly from the CLI</li> <li>Adding default labels to issues</li> <li>Checking repository information</li> </ul> <p>Without a GitHub token, these features will be disabled.</p>"},{"location":"github-token/#creating-a-github-personal-access-token","title":"Creating a GitHub Personal Access Token","text":"<ol> <li>Go to GitHub Developer Settings</li> <li>Click \"Generate new token\" \u2192 \"Generate new token (classic)\"</li> <li>Give your token a descriptive name (e.g., <code>DAI CLI Tool</code>)</li> <li>Set an expiration date (recommended: 90 days for security)</li> <li>Select the following scopes:</li> <li><code>repo</code> \u2014 Full control of private repositories (required for issue creation)</li> <li>Click Generate token and copy it \u2014 you will not be able to see it again!</li> </ol>"},{"location":"github-token/#adding-the-token-to-dai","title":"Adding the token to DAI","text":"<p>You can add the token by running:</p> <pre><code>dai github-token\n</code></pre> <p>Or by editing your configuration file manually:</p> <pre><code># ~/.dai/config.yaml\ngithub_token: ghp_yourtokenhere\n</code></pre>"},{"location":"github-token/#security-tips","title":"Security tips","text":"<ul> <li>Never share your token with anyone</li> <li>Treat it like a password</li> <li>Revoke it immediately if you suspect it\u2019s been compromised:   Revoke token</li> </ul> <p>Next: Commands</p>"},{"location":"installation/","title":"Installation","text":"<p>This guide explains how to install DAI using the official prebuilt binaries from the <code>dai-releases</code> repository. Building from source is only recommended for contributors or developers.</p>"},{"location":"installation/#install-from-prebuilt-binary-recommended","title":"\ud83d\udce6 Install from prebuilt binary (recommended)","text":"<ol> <li> <p>Download the latest release for your OS from: https://github.com/gorankrgovic/dai-releases/releases/latest</p> </li> <li> <p>Unpack the archive (if downloaded as <code>.zip</code> or <code>.tar.gz</code>):</p> </li> </ol> <pre><code>tar -xvzf dai_&lt;version&gt;_linux_amd64.tar.gz\n# or\nunzip dai_&lt;version&gt;_macos_arm64.zip\n</code></pre> <ol> <li>Make the binary executable:</li> </ol> <pre><code>chmod +x dai\n</code></pre> <ol> <li>Move it to your PATH:</li> </ol> <pre><code>sudo mv dai /usr/local/bin\n</code></pre> <ol> <li>Verify installation:</li> </ol> <pre><code>dai --version\n</code></pre>"},{"location":"installation/#build-from-source-for-contributors-only","title":"\ud83d\udee0 Build from source (for contributors only)","text":"<p>If you want to work on DAI or contribute to its development:</p> <ol> <li>Clone the main repository:</li> </ol> <pre><code>git clone https://github.com/gorankrgovic/dai.git\ncd dai\n</code></pre> <ol> <li>Build the binary:</li> </ol> <pre><code>go build -o dai\n</code></pre> <ol> <li>Move to your PATH:</li> </ol> <pre><code>sudo mv dai /usr/local/bin\n</code></pre> <ol> <li>Verify installation:</li> </ol> <pre><code>dai --version\n</code></pre>"},{"location":"installation/#first-time-setup","title":"First-time setup","text":"<p>After installing, run:</p> <pre><code>dai config\n</code></pre> <p>This will start the configuration wizard to set your OpenAI API key and select the preferred AI model. Configuration is stored locally at:</p> <pre><code>~/.dai/config.yaml\n</code></pre> <p>Next: Configuration</p>"},{"location":"license/","title":"License","text":"<p>DAI \u2014 Debug &amp; Develop AI Copyright (C) 2024-present Goran Krgovic</p> <p>This project is licensed under the GNU General Public License v3.0.</p> <p>You may obtain a copy of the full license text at: https://www.gnu.org/licenses/gpl-3.0.txt</p>"},{"location":"license/#summary","title":"Summary","text":"<p>You are free to: - Use the software for any purpose - Study how the software works - Modify the software to fit your needs - Share copies of the software - Distribute modified versions</p> <p>Under the following conditions: - Source code disclosure \u2014 If you distribute the software (modified or unmodified), you must make the source code available under the same license. - License continuity \u2014 You must keep the same GNU GPL v3 license. - No warranty \u2014 The software is provided \u201cas is,\u201d without warranty of any kind.</p>"},{"location":"license/#disclaimer","title":"Disclaimer","text":"<p>This is a simplified overview of the license. For the full legal terms, please refer to the official text: GNU General Public License v3.0</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>This page lists common issues you might encounter when using DAI and how to fix them.</p>"},{"location":"troubleshooting/#command-not-found-dai","title":"Command not found: <code>dai</code>","text":"<p>Cause: The DAI binary is not in your system <code>PATH</code>.</p> <p>Solution:</p> <pre><code>sudo mv dai /usr/local/bin\n</code></pre> <p>Then verify:</p> <pre><code>dai --version\n</code></pre>"},{"location":"troubleshooting/#openai_key-missing-or-invalid","title":"<code>openai_key</code> missing or invalid","text":"<p>Cause: Your OpenAI API key is not set or is incorrect.</p> <p>Solution: 1. Run:</p> <pre><code>dai config\n</code></pre> <ol> <li>Enter a valid OpenAI API key (starts with <code>sk-</code>).</li> <li>If the issue persists, check your <code>~/.dai/config.yaml</code> file.</li> </ol>"},{"location":"troubleshooting/#github-issue-creation-not-working","title":"GitHub issue creation not working","text":"<p>Cause: Missing or invalid GitHub Personal Access Token (PAT).</p> <p>Solution: 1. Generate a new token following GitHub Token setup. 2. Add it to DAI:</p> <pre><code>dai github-token\n</code></pre>"},{"location":"troubleshooting/#permission-denied-when-running-dai","title":"<code>permission denied</code> when running DAI","text":"<p>Cause: The binary does not have execution permissions.</p> <p>Solution:</p> <pre><code>chmod +x dai\n</code></pre>"},{"location":"troubleshooting/#model-not-supported","title":"Model not supported","text":"<p>Cause: You specified a model that the current OpenAI API does not support.</p> <p>Solution: - Update your <code>model</code> in <code>~/.dai/config.yaml</code> to a supported one (e.g., <code>gpt-4o-mini</code>). - Check OpenAI's model list.</p>"},{"location":"troubleshooting/#still-having-issues","title":"Still having issues?","text":"<ul> <li>Update DAI to the latest version:</li> </ul> <pre><code>git pull origin main &amp;&amp; go build -o dai &amp;&amp; sudo mv dai /usr/local/bin\n</code></pre> <ul> <li>Open a GitHub Issue with details:   https://github.com/gorankrgovic/dai/issues</li> </ul> <p>Next: Contributing</p>"}]}